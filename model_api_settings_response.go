/*
SafePay API

API for SafePay services

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ApiSettingsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiSettingsResponse{}

// ApiSettingsResponse struct for ApiSettingsResponse
type ApiSettingsResponse struct {
	Data *ApiSettingsResponseData `json:"data,omitempty"`
	Status *ApiSettingsResponseStatus `json:"status,omitempty"`
}

// NewApiSettingsResponse instantiates a new ApiSettingsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiSettingsResponse() *ApiSettingsResponse {
	this := ApiSettingsResponse{}
	return &this
}

// NewApiSettingsResponseWithDefaults instantiates a new ApiSettingsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiSettingsResponseWithDefaults() *ApiSettingsResponse {
	this := ApiSettingsResponse{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *ApiSettingsResponse) GetData() ApiSettingsResponseData {
	if o == nil || IsNil(o.Data) {
		var ret ApiSettingsResponseData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiSettingsResponse) GetDataOk() (*ApiSettingsResponseData, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *ApiSettingsResponse) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given ApiSettingsResponseData and assigns it to the Data field.
func (o *ApiSettingsResponse) SetData(v ApiSettingsResponseData) {
	o.Data = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ApiSettingsResponse) GetStatus() ApiSettingsResponseStatus {
	if o == nil || IsNil(o.Status) {
		var ret ApiSettingsResponseStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiSettingsResponse) GetStatusOk() (*ApiSettingsResponseStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ApiSettingsResponse) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given ApiSettingsResponseStatus and assigns it to the Status field.
func (o *ApiSettingsResponse) SetStatus(v ApiSettingsResponseStatus) {
	o.Status = &v
}

func (o ApiSettingsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiSettingsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableApiSettingsResponse struct {
	value *ApiSettingsResponse
	isSet bool
}

func (v NullableApiSettingsResponse) Get() *ApiSettingsResponse {
	return v.value
}

func (v *NullableApiSettingsResponse) Set(val *ApiSettingsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableApiSettingsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableApiSettingsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiSettingsResponse(val *ApiSettingsResponse) *NullableApiSettingsResponse {
	return &NullableApiSettingsResponse{value: val, isSet: true}
}

func (v NullableApiSettingsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiSettingsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


