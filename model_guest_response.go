/*
SafePay API

API for SafePay services

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GuestResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GuestResponse{}

// GuestResponse struct for GuestResponse
type GuestResponse struct {
	Data *GuestResponseData `json:"data,omitempty"`
	Status *AuthResponseStatus `json:"status,omitempty"`
}

// NewGuestResponse instantiates a new GuestResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGuestResponse() *GuestResponse {
	this := GuestResponse{}
	return &this
}

// NewGuestResponseWithDefaults instantiates a new GuestResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGuestResponseWithDefaults() *GuestResponse {
	this := GuestResponse{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *GuestResponse) GetData() GuestResponseData {
	if o == nil || IsNil(o.Data) {
		var ret GuestResponseData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuestResponse) GetDataOk() (*GuestResponseData, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *GuestResponse) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given GuestResponseData and assigns it to the Data field.
func (o *GuestResponse) SetData(v GuestResponseData) {
	o.Data = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GuestResponse) GetStatus() AuthResponseStatus {
	if o == nil || IsNil(o.Status) {
		var ret AuthResponseStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuestResponse) GetStatusOk() (*AuthResponseStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GuestResponse) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given AuthResponseStatus and assigns it to the Status field.
func (o *GuestResponse) SetStatus(v AuthResponseStatus) {
	o.Status = &v
}

func (o GuestResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GuestResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableGuestResponse struct {
	value *GuestResponse
	isSet bool
}

func (v NullableGuestResponse) Get() *GuestResponse {
	return v.value
}

func (v *NullableGuestResponse) Set(val *GuestResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGuestResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGuestResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGuestResponse(val *GuestResponse) *NullableGuestResponse {
	return &NullableGuestResponse{value: val, isSet: true}
}

func (v NullableGuestResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGuestResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


